%plotting curvature of different subjects' snippets across states

bx_curves = readmatrix('C:\Users\calebsponheim\Documents\git\intermittent_control_project\data\python_switching_models\BxRTPcurve_data.csv');
rs_curves = readmatrix('C:\Users\calebsponheim\Documents\git\intermittent_control_project\data\python_switching_models\RSRTPcurve_data.csv');
rj_curves = readmatrix('C:\Users\calebsponheim\Documents\git\intermittent_control_project\data\python_switching_models\RJRTPcurve_data.csv');
%%

x1 = bx_curves;
x2 = rj_curves;
x3 = rs_curves;

% x1 = bx_acceleration_maxima;
% x2 = rj_acceleration_maxima;
% x3 = rs_acceleration_maxima;

% x1 = bx_radius(~isnan(rs_radius));
% x2 = rj_radius(~isnan(rj_radius));
% x3 = rs_radius(~isnan(rs_radius));


% x1 = bx_position_normalized(:,2);
% x2 = rj_position_normalized(:,2);
% x3 = rs_position_normalized(:,2);
% 
% x1 = bx_speed;
% x2 = rj_speed;
% x3 = rs_speed;
x = [x1; x2; x3];

g1 = repmat({'Bx'},length(x1),1);
g2 = repmat({'Rj'},length(x2),1);
g3 = repmat({'Rs'},length(x3),1);
g = [g1; g2; g3];

figure('visible','on'); hold on
boxplot(x,g)


% [~, ~, ~, q_temp, ~] = al_goodplot(bx_speed(1:5:end),1,0.75, colors(1,:), 'right', .1,std(bx_speed(1:5:end))/1000,1);
% q(1) = q_temp(7,1);
% [~, ~, ~, q_temp, ~] = al_goodplot(rs_speed(1:5:end),2,0.75, colors(2,:), 'right', .1,std(rs_speed(1:5:end))/1000,1);
% q(2) = q_temp(7,1);
% [~, ~, ~, q_temp, ~] = al_goodplot(rj_speed(1:5:end),3,0.75, colors(3,:), 'right', .1,std(rj_speed(1:5:end))/1000,1);
% q(3) = q_temp(7,1);
% 
ylim([quantile(x,.01) quantile(x,.9)])
% xticklabels({'Bx','RS','RJ'})
hold off
box off
% ylim([0 mean(q,'omitnan')])
% xlim([1 5])
% xticks([1,2,3])
% xticklabels({'Bx','RS','RJ'})
% hold off
% box off
% set(gcf,'color','w','Position',[100 100 600 800])
% title(strcat('subject comparison for Radius of Curvature of all state snippets'));
% xlabel('State Number')
% ylabel('Radius Size')


%%
edges = [0.5 : .5 : 120];

[N_rs_curves, ~] = histcounts(rs_curves,edges);
[N_rj_curves, ~] = histcounts(rj_curves,edges);
[N_bx_curves, ~] = histcounts(bx_curves,edges);
N_rs_curves = N_rs_curves/numel(rs_curves);
N_rj_curves = N_rj_curves/numel(rs_curves);
N_bx_curves = N_bx_curves/numel(rs_curves);


figure; hold on; 
bar(edges(1:end-1),N_rs_curves,'DisplayName','RS'); 
bar(edges(1:end-1),N_bx_curves,'DisplayName','BX'); 
bar(edges(1:end-1),N_rj_curves,'DisplayName','RJ'); 
title('curve across all kinematics')
legend()
% xlim([-.015 .015])

%%
[p_curve,uhhhh,uh] = ranksum(rs_curves,rj_curves);
disp(strcat('RS vs RJ Curve P-Value: ',num2str(p_curve)))

%%

% 
% saveas(gcf,strcat('C:\Users\calebsponheim\Documents\git\intermittent_control_project\figures\cross-subject_Curvature.png'));
close gcf